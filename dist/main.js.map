{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A,C;A,M,C,c,C,c,E,C,a,C;I,K,E,I;A,C;A,c,C,C,Y,I,C,C;;;;S,wC,C,G,E,C;I,M,C,wC,C,G,K,sC,C,G,K,iD,C,G,K,wC;A,C;S,wC,G,C;I,K,C,G,C,S,C,C;A,C;S,iD,C,C,E,M,E,C;I,E,G,C,E,M;I,E,E,M,C,C,K,C,S,M,C,uC,C,C,E,M;I,G,C,C,G,M,C,S,C,Q,C,I,C,C,E,K,C,C,E,E;I,E,E,C,K,C,W,C,C,W,E,C,G,C,C,W,C,I;I,E,E,C,K,C,Q,C,K,C,M,M,C,K,C,I,C,C;I,E,E,C,K,C,yD,I,C,C,G,M,C,uC,C,C,E,M;A,C;S,sC,C,I,E,C;I,E,E,M,C,M,K,C,c,I,C,M,C,Q,K,I,I,I,C,C,gB,I,E,M,C,K,C,I,C,I;A,C;S,wC,C,G,E,C;I,E,E,K,C,O,C,G,G,M,C,uC,C,G;A,C;S,uC,C,G,E,G,E,C;I,E,E,G,I,I,I,G,G,G,C,M,E,G,G,G,C,M;I,G,C,G,C,C,G,C,E,I,G,G,C,K,C,G,G,C,G,G,E,C,G,I,C,C,I,G,C,C;I,M,C,I;A,C;AAGe,GAAA,CAAA,8BAAA,GAAA,QAAA,CAAA,QAAA,CAACA,KAAD,EAAW,CAAX;IACb,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,wCAAA,KACK,uCAAA,EAASA,KAAT,IADL,wCAAA,KAEK,qBAAA,EAAeA,KAAf;AAEN,C;A,c,C,C,Y,8B;;;;A,C;A,M,C,c,C,c,E,C,a,C;I,K,E,I;A,C;A,c,C,c,G,c,C,a,G,I,C,C;;S,wC,C,G,E,C;I,M,C,wC,C,G,K,sC,C,G,K,iD,C,G,K,wC;A,C;S,wC,G,C;I,K,C,G,C,S,C,C;A,C;S,iD,C,C,E,M,E,C;I,E,G,C,E,M;I,E,E,M,C,C,K,C,S,M,C,uC,C,C,E,M;I,G,C,C,G,M,C,S,C,Q,C,I,C,C,E,K,C,C,E,E;I,E,E,C,K,C,W,C,C,W,E,C,G,C,C,W,C,I;I,E,E,C,K,C,Q,C,K,C,M,M,C,K,C,I,C,C;I,E,E,C,K,C,yD,I,C,C,G,M,C,uC,C,C,E,M;A,C;S,sC,C,I,E,C;I,E,E,M,C,M,K,C,c,I,C,M,C,Q,K,I,I,I,C,C,gB,I,E,M,C,K,C,I,C,I;A,C;S,wC,C,G,E,C;I,E,E,K,C,O,C,G,G,M,C,uC,C,G;A,C;S,uC,C,G,E,G,E,C;I,E,E,G,I,I,I,G,G,G,C,M,E,G,G,G,C,M;I,G,C,G,C,C,G,C,E,I,G,G,C,K,C,G,G,C,G,G,E,C,G,I,C,C,I,G,C,C;I,M,C,I;A,C;ACND,EAKA,AALA;;;;;CAKA,AALA,EAKA,CACA,GAAA,CAAMC,oCAAc,GAAG,QAAA,CAAjBA,cAAiB,CAAAC,IAAI,EAAI,CAA/B;IACE,GAAA,CAAIC,WAAW,GAAGC,qCAAAA,CAAOF,IAAP,EACfG,GADe,CACX,QAAA,CAAAC,SAAS,EADhB,CAAA;QACgB,MAAA,CAAIC,MAAM,CAACC,IAAP,CAAYJ,qCAAAA,CAAOE,SAAP;IAAhB,CADE,EAEfG,IAFe,CAEV,CAFU;IAGlB,MAAA,CAAOC,KAAK,CAACC,IAAN,CAAW,GAAA,CAAIC,GAAJ,CAAQT,WAAR;AACnB,CALD;AAOA,GAAA,CAAMU,qCAAe,GAAGZ,oCAAc,CAAC,CAAD;AACtC,GAAA,CAAMa,sCAAgB,GAAGb,oCAAc,CAAC,CAAD;AAEvC,EAOA,AAPA;;;;;;;CAOA,AAPA,EAOA,CACA,GAAA,CAAMc,iDAA2B,GAAG,QAAA,CAA9BA,2BAA8B,CAACC,KAAD,EAAQC,GAAR,EAAaf,IAAb,EAAsB,CAA1D;IACE,MAAA,CAAOK,MAAM,CAACC,IAAP,CAAYQ,KAAZ,EACJE,MADI,CACG,QAAA,CAAAC,GAAG,EADb,CAAA;QACa,MAAA,CAAIF,GAAG,CAACG,QAAJ,CAAaD,GAAb;IAAJ,CADN,EAEJd,GAFI,CAEA,QAAA,CAAAc,GAAG,EADG,CAAA;QACH,MAAA,CAAI,GAAA,CAAIE,8CAAJ,CAAoBF,GAApB,EAAyBH,KAAK,CAACG,GAAD,GAA9B,CAAA,SAAA,MAAA,CAA+CH,KAAK,CAACM,EAArD,EAAA,CAAA,eAAA,MAAA,CAAsEH,GAAtE,EAAA,CAAA,2CAAA,MAAA,CAAoHjB,IAApH;IAAJ,CAFH;AAGR,CAJD;AAMA,GAAA,CAAMqB,sDAAgC,GAAG,QAAA,CAAnCA,gCAAmC,CAAAP,KAAK,EAAI,CAAlD;IACE,MAAA,CAAOD,iDAA2B,CAACC,KAAD,EAAQH,qCAAR,EAAyB,CAAzB;AACnC,CAFD;AAIA,GAAA,CAAMW,uDAAiC,GAAG,QAAA,CAApCA,iCAAoC,CAAAR,KAAK,EAAI,CAAnD;IACE,MAAA,CAAOD,iDAA2B,CAACC,KAAD,EAAQF,sCAAR,EAA0B,CAA1B;AACnC,CAFD;AAIO,GAAA,CAAMW,mCAAa,GAAG,QAAA,CAAhBA,aAAgB,CAAAT,KAAK,EAAI,CAA/B;IACL,MAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,wCAAA,CACKQ,uDAAiC,CAACR,KAAD,IADtC,wCAAA,CAEKO,sDAAgC,CAACP,KAAD;AAEtC,CALM;A,c,C,a,G,mC;AAOA,GAAA,CAAMU,oCAAc,GAAG,QAAA,CAAjBA,cAAiB,CAAA1B,KAAK,EAAI,CAAhC;IACL,EAAA,GAAKA,KAAK,CAAC2B,MAAX,EAAmB,MAAA,CAAO,CAAA,CAAP;IACnB,MAAA,CAAO3B,KAAK,CAAC2B,MAAN,CAAatB,GAAb,CAAiBoB,mCAAjB,EAAgChB,IAAhC,CAAqCmB,QAArC;AACR,CAHM;A,c,C,c,G,oC;;;;;A,C;A,M,C,c,C,c,E,C,a,C;I,K,E,I;A,C;A,M,C,c,C,c,E,C,O,C;I,U,E,I;I,G,E,Q,C,G,G,C;Q,M,C,2B,C,C;I,C;A,C;;AC/CP,GAAA,CAAA,2BAAA,GAAA,4CAAA,CAAA,wBAAA;S,4C,C,G,E,C;I,M,C,G,I,G,C,U,G,G,G,C;Q,C,U,G;I,C;A,C","sources":["src/lib/lint.js","src/lib/lint-layer.js","src/index.js"],"sourcesContent":["import { validate } from '@mapbox/mapbox-gl-style-spec';\nimport { validateLayers } from './lint-layer.js';\n\nexport default (style) => {\n  return [\n    ...validate(style),\n    ...validateLayers(style),\n  ];\n};\n","import { latest, ValidationError } from '@mapbox/mapbox-gl-style-spec';\n\n/**\n * getPropertyIds\n * Get property ids for either `paint` or `layout` properties\n * @param {string} type - `paint` or `layout`\n * @returns {string[]} - property ids for the given type\n */\nconst getPropertyIds = type => {\n  let propertyIds = latest[type]\n    .map(layerType => Object.keys(latest[layerType]))\n    .flat(1);\n  return Array.from(new Set(propertyIds));\n};\n\nconst paintProperties = getPropertyIds('paint');\nconst layoutProperties = getPropertyIds('layout');\n\n/**\n * validateMisplacedProperties\n * Find property ids at the top level of a layer that should not be there\n * @param {Object} layer - a layer object from a style\n * @param {string[]} ids - property ids to look for\n * @param {string} type - `paint` or `layout`\n * @returns {ValidationError[]} - an error for each id found, if any\n */\nconst validateMisplacedProperties = (layer, ids, type) => {\n  return Object.keys(layer)\n    .filter(key => ids.includes(key))\n    .map(key => new ValidationError(key, layer[key], `layer '${layer.id}' contains '${key}' at the top level, but it should be in ${type}`));\n}\n\nconst validateMisplacedPaintProperties = layer => {\n  return validateMisplacedProperties(layer, paintProperties, 'paint');\n};\n\nconst validateMisplacedLayoutProperties = layer => {\n  return validateMisplacedProperties(layer, layoutProperties, 'layout');\n};\n\nexport const validateLayer = layer => {\n  return [\n    ...validateMisplacedLayoutProperties(layer),\n    ...validateMisplacedPaintProperties(layer),\n  ];\n};\n\nexport const validateLayers = style => {\n  if (!style.layers) return [];\n  return style.layers.map(validateLayer).flat(Infinity);\n};\n","import lint from \"./lib/lint\";\n\nexport { lint };\n"],"names":["style","getPropertyIds","type","propertyIds","latest","map","layerType","Object","keys","flat","Array","from","Set","paintProperties","layoutProperties","validateMisplacedProperties","layer","ids","filter","key","includes","ValidationError","id","validateMisplacedPaintProperties","validateMisplacedLayoutProperties","validateLayer","validateLayers","layers","Infinity"],"version":3,"file":"main.js.map","sourceRoot":"../"}